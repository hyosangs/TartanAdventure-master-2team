<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright (c) 2009, 2015 Mountainminds GmbH & Co. KG and Contributors
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
Marc R. Hoffmann - initial API and implementation
-->

<project name="Example Ant Build of RpnCalculator with JaCoCo" default="rebuild" xmlns:jacoco="antlib:org.jacoco.ant">

<description>
  Example Ant build file that demonstrates how a JaCoCo coverage report
  can be itegrated into an existing build in three simple steps.
</description>

<property name="src.dir" location="src" />
<property name="test.dir" location="tests" />
<property name="result.dir" location="./target" />
<property name="result.classes.dir" location="${result.dir}/classes/product/" />
<property name="test.classes.dir" location="${result.dir}/classes/test/" />
<property name="result.report.dir" location="${result.dir}/site/jacoco" />
<property name="result.exec.file" location="${result.dir}/jacoco.exec" />

<!-- Step 1: Import JaCoCo Ant tasks -->
<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
  <classpath path="./lib/jacoco-0.8.1/lib/jacocoant.jar:." />
</taskdef>

<target name="clean">
  <delete dir="${result.dir}" />
</target>

<target name="compile">
  
  <mkdir dir="${result.classes.dir}" />
  <javac srcdir="${src.dir}" destdir="${result.classes.dir}" debug="true" includeantruntime="false">
    <classpath>
      <pathelement path="${classpath}"/>
      <pathelement location="./lib/junit-4.12.jar"/>
      <pathelement location="./lib/hamcrest-core-1.3.jar"/>
    </classpath>
  </javac>

  <mkdir dir="${test.classes.dir}" />
  <javac srcdir="${test.dir}" destdir="${test.classes.dir}" debug="true" includeantruntime="false">
    <classpath>
      <pathelement path="${classpath}"/>
      <pathelement path="${result.classes.dir}"/>
      <pathelement location="./lib/junit-4.12.jar"/>
      <pathelement location="./lib/mockito-core-2.18.9.jar"/>
    </classpath>
  </javac>

</target>

<target name="test" depends="compile">
  <jacoco:coverage destfile="${result.exec.file}">
    <java classname="edu.cmu.tartan.LGTestRunnerJUnit" fork="true">
      <classpath path="${test.classes.dir}" />
      <classpath>
        <pathelement path="${classpath}"/>
        <pathelement path="${result.classes.dir}"/>
        <pathelement location="./lib/junit-4.12.jar"/>
		<pathelement location="./lib/hamcrest-core-1.3.jar"/>
        <pathelement location="./lib/mockito-core-2.18.9.jar"/>
      </classpath>
    </java>
  </jacoco:coverage>

</target>

<target name="report" depends="test">
  <!-- Step 3: Create coverage report -->
  <jacoco:report>

    <!-- This task needs the collected execution data and ... -->
    <executiondata>
      <file file="${result.exec.file}" />
    </executiondata>

    <!-- the class files and optional source files ... -->
    <structure name="JaCoCo Ant Example">
      <classfiles>
	<fileset dir="${result.classes.dir}" />
      </classfiles>
      <sourcefiles encoding="UTF-8">
	<fileset dir="${src.dir}" />
      </sourcefiles>
    </structure>

    <!-- to produce reports in different formats. -->
    <html destdir="${result.report.dir}" />
    <csv destfile="${result.report.dir}/report.csv" />
    <xml destfile="${result.report.dir}/report.xml" />
  </jacoco:report>
</target>

<target name="rebuild" depends="clean,compile,test,report" />

</project>
